/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_RESPONSE_PB_H_INCLUDED
#define PB_RESPONSE_PB_H_INCLUDED
#include <pb.h>
#include "primitive.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Response {
    char metric_id[41];
    bool has_primitive;
    primitive_Primitive primitive;
} Response;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Response_init_default                    {"", false, primitive_Primitive_init_default}
#define Response_init_zero                       {"", false, primitive_Primitive_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define Response_metric_id_tag                   1
#define Response_primitive_tag                   2

/* Struct field encoding specification for nanopb */
#define Response_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   metric_id,         1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  primitive,         2)
#define Response_CALLBACK NULL
#define Response_DEFAULT NULL
#define Response_primitive_MSGTYPE primitive_Primitive

extern const pb_msgdesc_t Response_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Response_fields &Response_msg

/* Maximum encoded size of messages (where known) */
#define RESPONSE_PB_H_MAX_SIZE                   Response_size
#define Response_size                            106

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
